[{"D:\\project\\contact-details\\src\\index.js":"1","D:\\project\\contact-details\\src\\reportWebVitals.js":"2","D:\\project\\contact-details\\src\\App.js":"3","D:\\project\\contact-details\\src\\redux\\store.js":"4","D:\\project\\contact-details\\src\\redux\\contactReducer.js":"5","D:\\project\\contact-details\\src\\redux\\contactType.js":"6","D:\\project\\contact-details\\src\\component\\ContactList.js":"7","D:\\project\\contact-details\\src\\redux\\contactAction.js":"8","D:\\project\\contact-details\\src\\redux\\localDB.js":"9","D:\\project\\contact-details\\src\\component\\ReUseContact.js":"10"},{"size":573,"mtime":1608271426164,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":1076,"mtime":1608399611493,"results":"14","hashOfConfig":"12"},{"size":312,"mtime":1608271290613,"results":"15","hashOfConfig":"12"},{"size":951,"mtime":1608361668392,"results":"16","hashOfConfig":"12"},{"size":126,"mtime":1608361668392,"results":"17","hashOfConfig":"12"},{"size":3672,"mtime":1608399741493,"results":"18","hashOfConfig":"12"},{"size":1283,"mtime":1608361755923,"results":"19","hashOfConfig":"12"},{"size":637,"mtime":1608294129068,"results":"20","hashOfConfig":"12"},{"size":7200,"mtime":1608441034790,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"1c6iwlx",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\project\\contact-details\\src\\index.js",[],["44","45"],"D:\\project\\contact-details\\src\\reportWebVitals.js",[],"D:\\project\\contact-details\\src\\App.js",[],"D:\\project\\contact-details\\src\\redux\\store.js",[],"D:\\project\\contact-details\\src\\redux\\contactReducer.js",[],"D:\\project\\contact-details\\src\\redux\\contactType.js",[],"D:\\project\\contact-details\\src\\component\\ContactList.js",["46","47"],"import React, { useEffect, useState } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {getContacts } from '../redux/contactAction';\r\n\r\n\r\nconst Allcontact= (props)=>{\r\n    const [DisplayData,ActionToDispalay]=useState({\r\n        SelectedArray:[]\r\n    })\r\n    const [ProcessedData,ActionToProsses]=useState()\r\n    const [PageState,ActionToPageState]=useState({\r\n        inputValue:\"\",\r\n        errordisplay:'Loading on your request...'\r\n    })\r\n   \r\n   \r\n    useEffect(()=>{\r\n        props.getContact()\r\n        if(props.responce){\r\n        let processArray={...ProcessedData,DisplayArray:props.responce,SelectedArray:props.responce}\r\n        ActionToProsses(processArray) \r\n        console.log(ProcessedData)  \r\n        }    \r\n    },[props.responce.length,DisplayData])\r\n\r\n\r\n    \r\n     const handleChange=(event)=>{\r\n        let modifiedObject={...PageState,[event.target.name]:event.target.value};\r\n        let value=modifiedObject.inputValue\r\n        ActionToPageState(modifiedObject)\r\n        let filteredArray=ProcessedData.DisplayArray.filter(dataToBe=>dataToBe.name.toLowerCase().startsWith(value.toLowerCase()));\r\n        ActionToProsses({...ProcessedData,SelectedArray:filteredArray}) \r\n        if(!filteredArray.length) ActionToPageState({...PageState,errordisplay:\"No Contact Found\",[event.target.name]:event.target.value})\r\n     }\r\n\r\n    const addTo =() =>{\r\n        props.forwardPage({currentPage:\"add\"})\r\n    }\r\n    const EditTo =(e) =>{\r\n        props.forwardPage({currentPage:\"edit\", selectedData:e})\r\n    }\r\n    const viewTo =(e) =>{\r\n        props.forwardPage({...props.pageAction,currentPage:\"view\", selectedData:e})\r\n    }\r\n\r\n    return(\r\n        <div>\r\n        <div className=\"searchbar mb-4\">\r\n            <input\r\n                className=\"form-control\"\r\n                type=\"text\"\r\n                name=\"inputValue\"\r\n                placeholder=\"Search Contacts\"\r\n                onChange={(e) => handleChange(e)}\r\n                value={PageState.inputValue}\r\n            ></input>\r\n            <button className=\"btn btn-primary\" onClick={addTo}><i className=\"fas fa-user-plus\"/> Add</button>\r\n        </div>\r\n        {ProcessedData && ProcessedData.SelectedArray && ProcessedData.SelectedArray.length ? ProcessedData.SelectedArray.map((Selecteditems, index) => {\r\n            return <div className=\"list-card card py-3 px-4\" key={Selecteditems.id}  >\r\n                {/* <img src={Selecteditems.thumbnailUrl} alt=\"thumbnail\" className=\"card-image\" /> */}\r\n                <div className=\"profile-dp\">\r\n                 {Selecteditems.name[0]}\r\n                </div>\r\n                <div className=\"mr-auto  px-3\" onClick={() => viewTo(Selecteditems.id)}>\r\n                    <div className=\"font-weight-bolder text-capitalize\">{Selecteditems.name}</div>\r\n                    <div className=\"text-xs\">{Selecteditems.email}</div>\r\n                    <div className=\"text-xs\">{Selecteditems.phonenumber}</div>\r\n                </div>\r\n                <button className=\"btn btn-primary align-self-center edit-btn\" onClick={(e) => EditTo(Selecteditems.id)} > <i className=\"fas fa-edit\"/> </button>\r\n            </div>\r\n        }) : <div className=\"my-3 p-3 text-center font-weight-bold no-msg\"><i className=\"fas fa-exclamation\"></i> {PageState.errordisplay} </div>}\r\n    </div>\r\n    )\r\n}\r\n\r\n\r\n\r\nconst mapStateToProps =state=>{\r\n    return {\r\n        responce:state.contact.contacts\r\n    }\r\n}\r\nconst mapDispatchToProps =dispatch=>{\r\n    return {\r\n        \r\n        getContact: () =>{dispatch(getContacts())},\r\n        \r\n    }\r\n}\r\n\r\n//export default Allcontact;\r\n export default connect(mapStateToProps,mapDispatchToProps)(Allcontact);","D:\\project\\contact-details\\src\\redux\\contactAction.js",[],"D:\\project\\contact-details\\src\\redux\\localDB.js",[],"D:\\project\\contact-details\\src\\component\\ReUseContact.js",["48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":7,"column":24,"nodeType":"55","messageId":"56","endLine":7,"endColumn":40},{"ruleId":"57","severity":1,"message":"58","line":24,"column":7,"nodeType":"59","endLine":24,"endColumn":42,"suggestions":"60"},{"ruleId":"57","severity":1,"message":"61","line":32,"column":7,"nodeType":"59","endLine":32,"endColumn":82,"suggestions":"62"},"no-native-reassign",["63"],"no-negated-in-lhs",["64"],"no-unused-vars","'ActionToDispalay' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'ProcessedData' and 'props'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["65"],"React Hook useEffect has missing dependencies: 'currentContact' and 'props.pageAction'. Either include them or remove the dependency array. You can also do a functional update 'TodoContact(c => ...)' if you only need 'currentContact' in the 'TodoContact' call.",["66"],"no-global-assign","no-unsafe-negation",{"desc":"67","fix":"68"},{"desc":"69","fix":"70"},"Update the dependencies array to be: [props.responce.length, DisplayData, props, ProcessedData]",{"range":"71","text":"72"},"Update the dependencies array to be: [currentContact, props.pageAction, props.pageAction.currentPage, props.pageAction.selectedData, props.responce]",{"range":"73","text":"74"},[744,779],"[props.responce.length, DisplayData, props, ProcessedData]",[1123,1198],"[currentContact, props.pageAction, props.pageAction.currentPage, props.pageAction.selectedData, props.responce]"]